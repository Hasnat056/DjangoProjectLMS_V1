# Generated by Django 5.2.1 on 2025-06-03 11:13

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('AcademicStructure', '0001_initial'),
        ('FacultyModule', '0001_initial'),
        ('Person', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('enrollmentid', models.AutoField(db_column='enrollmentID', primary_key=True, serialize=False)),
                ('enrollmentdate', models.DateTimeField(db_column='enrollmentDate')),
                ('status', models.CharField(blank=True, max_length=9, null=True)),
                ('allocationid', models.ForeignKey(db_column='allocationID', on_delete=django.db.models.deletion.CASCADE, to='FacultyModule.courseallocation')),
            ],
            options={
                'db_table': 'enrollment',
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('resultid', models.AutoField(db_column='resultID', primary_key=True, serialize=False)),
                ('coursegpa', models.DecimalField(db_column='courseGPA', decimal_places=2, max_digits=4)),
                ('enrollmentid', models.OneToOneField(db_column='enrollmentID', on_delete=django.db.models.deletion.CASCADE, to='StudentModule.enrollment')),
            ],
            options={
                'db_table': 'result',
            },
        ),
        migrations.CreateModel(
            name='Reviews',
            fields=[
                ('reviewid', models.AutoField(db_column='reviewID', primary_key=True, serialize=False)),
                ('reviewtext', models.TextField(db_column='reviewText')),
                ('createdat', models.DateTimeField(db_column='createdAt')),
                ('enrollmentid', models.ForeignKey(db_column='enrollmentID', on_delete=django.db.models.deletion.CASCADE, to='StudentModule.enrollment')),
            ],
            options={
                'db_table': 'reviews',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('studentid', models.OneToOneField(db_column='studentID', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='Person.person')),
                ('status', models.CharField(max_length=9)),
                ('classid', models.ForeignKey(blank=True, db_column='classID', null=True, on_delete=django.db.models.deletion.SET_NULL, to='AcademicStructure.class')),
                ('programid', models.ForeignKey(blank=True, db_column='programID', null=True, on_delete=django.db.models.deletion.SET_NULL, to='AcademicStructure.program')),
            ],
            options={
                'db_table': 'student',
            },
        ),
        migrations.AddField(
            model_name='enrollment',
            name='studentid',
            field=models.ForeignKey(db_column='studentID', on_delete=django.db.models.deletion.CASCADE, to='StudentModule.student'),
        ),
        migrations.AlterUniqueTogether(
            name='enrollment',
            unique_together={('studentid', 'allocationid')},
        ),
        migrations.CreateModel(
            name='Transcript',
            fields=[
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('totalcredits', models.IntegerField(db_column='totalCredits')),
                ('semestergpa', models.DecimalField(db_column='semesterGPA', decimal_places=2, max_digits=4)),
                ('semesterid', models.ForeignKey(db_column='semesterID', on_delete=django.db.models.deletion.CASCADE, to='AcademicStructure.semester')),
                ('studentid', models.ForeignKey(db_column='studentID', on_delete=django.db.models.deletion.CASCADE, to='StudentModule.student')),
            ],
            options={
                'db_table': 'transcript',
                'unique_together': {('studentid', 'semesterid')},
            },
        ),
    ]
